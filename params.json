{"name":"Kwm","tagline":"Tiling window manager with focus follows mouse for OSX","body":"## Brief Description\r\n\r\n[*Kwm*](https://koekeishiya.github.io/kwm) started as a simple project to get true focus-follows-mouse support on OSX through event tapping.\r\nIt is now a tiling window manager that represents windows as the leaves of a binary tree.\r\n*Kwm* supports binary space partitioned, monocle and floating spaces.\r\n\r\n*Kwm* uses the event taps API (Quartz Event Services) to observe, filter and alter user input events prior\r\nto their delivery to a foreground application. This allows for functionality such as focus-follows-mouse,\r\nand different types of hotkeys.\r\n\r\n*Kwm* runs a local daemon to read messages and trigger functions.\r\n*Kwmc* is used to write to *Kwm*'s socket, and must be used when interacting with and configuring how *Kwm* works.\r\nFor a list of various commands that can be issued, check the readme located within the *kwmc* folder.\r\nThe *Kwmc* tool also has a built-in help system that can be accessed from the terminal using `kwmc help`.\r\n\r\nFor in depth information, sample configurations, and useful scripts to implement new features by combining\r\nkwmc commands, check out the [wiki](https://github.com/koekeishiya/kwm/wiki)\r\n\r\n*Kwm* requires access to the OSX accessibility API.\r\nTested on El Capitan (10.11.1 - 10.11.3).\r\n\r\n![img](https://cloud.githubusercontent.com/assets/6175959/12651784/55c7debe-c5e8-11e5-836f-97f99f2b4529.png)\r\nFor more screenshots, [click here.](https://github.com/koekeishiya/kwm/issues/2)\r\n\r\n[herrbischoff](https://github.com/herrbischoff) has re-created my bar from the screenshots as a widget\r\nfor [Ãœbersicht](http://tracesof.net/uebersicht/) for those that would like to have a decent bar with their setup.\r\nThis widget can be found here: https://github.com/herrbischoff/nerdbar.widget\r\n\r\n## Extended Information:\r\n\r\nThe different features; binary space partitioning, focus-follows-mouse and the hotkey-system can all be enabled\r\nindependently. This allows the user to choose which functionality to enable depending on their workflow.\r\n\r\n*Binary Space Partitioning:*\r\nKwm tiles windows using a binary-tree structure. For information, check the usage section.\r\n\r\n*Focus-Follows-Mouse:*\r\nBoth autofocus and autoraise is available, however autofocus only redirects key input to the window below the cursor,\r\nthe menubar is not accessible. Autoraise gives a window focus and raises it to the front.  By default *Kwm* is set to\r\nuse autoraise as it is meant to be used alongside the tiling functionality, and so windows should not overlap unless\r\na window is specifically made floating.\r\n\r\n*System-Wide Hotkeys:*\r\nKwm allows the user to bind and unbind hotkeys to commands through the *Kwmc* tool, using a bind and unbind option.\r\nThese binds support the use of a single prefix, which may be bind-specific or global (apply to all binds).\r\nThere are 3 types of hotkeys: global, global + blacklist applications, specified applications.\r\nUsing hotkeys to change window focus will work even if focus-follows-mouse has been disabled.\r\n\r\n*Multiple monitor support:*\r\nKwm supports external monitors and have commands that allow for focusing screens,  moving windows, and capturing applications.\r\nFor more information, see `kwmc help screen` and `kwmc config capture`.\r\n\r\n## Install:\r\n\r\nA codesigned binary release is available through Homebrew\r\n\r\n      brew install homebrew/binary/kwm\r\n\r\nTo compile from source\r\n\r\n      make install\r\n\r\nBuild with debug information\r\n\r\n      make\r\n\r\nTo make *Kwm* start automatically on login through launchd, if compiled from source\r\n\r\n      edit /path/to/kwm on line 9 of examples/com.koekeishiya.kwm.plist\r\n      cp examples/com.koekeishiya.kwm.plist ~/Library/LaunchAgents/\r\n\r\nI would recommend for *Kwm* to be managed by launchd, as it otherwise requires\r\nthe terminal application to have Accessibility Permissions (Not Recommended).\r\n\r\n## Configuration:\r\n\r\nThe default configuration file is `$HOME/.kwm/kwmrc` and is a script that contains *Kwmc* commands\r\nto be executed when *Kwm* starts. This file can be used to blacklist applications and specify\r\na variety of settings, as well as run any command not restricted to *Kwmc*.\r\n\r\n*Kwm* can apply all of these settings during runtime, and so live testing of options is possible\r\nbefore writing them into the config file.\r\n\r\nIn addition to the above, the file `$HOME/.kwm/init` is a shell script that will be ran after\r\n*Kwm* has finished setting up the internal configuration.\r\n\r\nA sample config and init file can be found within the [examples](https://github.com/koekeishiya/kwm/tree/master/examples) directory.\r\n\r\nNote: The sample configuration and information is updated to follow Kwm @ master. If you are running a release\r\nversion of Kwm, be aware that the documentation in this github repository may not always apply.\r\n\r\n## Usage:\r\n\r\nWhen *Kwm* starts, it will automatically tile the windows of the current space using the tiling mode set in the config file.\r\nBy default, it will use binary space partitioning. This will also happen once for any other space the user might switch to.\r\n\r\nWhen *Kwm* detects a new window, it is inserted into a window tree using an insertion point, with the given split-mode.\r\nWhen a window is closed, it will be removed from the window tree and the tree will be rebalanced.\r\nBy default, the insertion point is the focused container, but a temporary insertion point can be set.\r\n\r\nThere are 3 types of split-modes available:\r\n - Optimal - uses width/height ratio (default)\r\n - Vertical\r\n - Horizontal\r\n\r\nA node in the bsp-tree can be in 2 different states:\r\n - Tree Node\r\n - Link Node\r\n\r\nExample of a bsp-tree consisting of only Tree Nodes:\r\n\r\n```\r\n          a                       a                       a\r\n         / \\         -->         / \\         -->         / \\\r\n        1   2                   1   b                   1   b\r\n                                   / \\                     / \\\r\n                                  3   2                   c   2\r\n                                                         / \\\r\n                                                        4   3\r\n\r\n---------------------   ---------------------   ---------------------\r\n|         |         |   |         |         |   |         |    |    |\r\n|         |         |   |         |    3    |   |         | 4  |  3 |\r\n|         |         |   |         |    *    |   |         | *  |    |\r\n|    1    |    2    |   |    1    |---------|   |    1    |---------|\r\n|         |    *    |   |         |         |   |         |         |\r\n|         |         |   |         |    2    |   |         |    2    |\r\n|         |         |   |         |         |   |         |         |\r\n---------------------   ---------------------   ---------------------\r\n\r\n```\r\n\r\nExample of a bsp-tree consisting of a [monocle-subtree (a Link Node)](https://github.com/koekeishiya/kwm/pull/231):\r\n\r\n```\r\n          a                       a                       a\r\n         / \\         -->         / \\         -->         / \\\r\n        1   b                   1   b                   1   b\r\n           / \\                 /   / \\                 /   / \\\r\n          3   2               4   3   2               4   3   2\r\n                                                     /\r\n                                                    5\r\n\r\n---------------------   ---------------------   ---------------------\r\n| SubTree |         |   | SubTree |         |   | SubTree |         |\r\n|    1    |    3    |   |    1    |    3    |   |    1    |    3    |\r\n|         |         |   |    |    |         |   |    |    |         |\r\n|         |---------|   |    4    |---------|   |    4    |---------|\r\n|         |         |   |         |         |   |    |    |         |\r\n|         |    2    |   |         |    2    |   |    5    |    2    |\r\n|         |         |   |         |         |   |         |         |\r\n---------------------   ---------------------   ---------------------\r\n\r\n```\r\n\r\nIn addition to bsp, *Kwm* supports both monocle and floating spaces.\r\nIf a space is set to floating mode, Kwm will ignore this space.\r\nIf a space is in monocle mode, every window will run fullscreen.\r\n\r\nIf a window is not detected by Kwm, it is most likely due to a 'window role' mismatch.\r\nUse the command `kwmc config add-role role application` to fix this.\r\nSee https://github.com/koekeishiya/kwm/issues/40 for information.\r\n\r\n### Donate\r\nFirst of all, Kwm will always be free and open source, however some users have\r\nexpressed interest in some way to show their support.\r\n\r\nIf you wish to do so, I have set up a patreon [here](https://www.patreon.com/aasvi).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}